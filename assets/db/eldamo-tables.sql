-- CREATED definition

CREATE TABLE CREATED (
    ID integer NOT NULL,
    TXT varchar(255) NOT NULL,
    PRIMARY KEY (ID)
);


-- FORM definition

CREATE TABLE FORM (
    ID integer NOT NULL,
    TXT varchar(255) NOT NULL, NORMALTXT VARCHAR(255),
    PRIMARY KEY (ID)
);

CREATE INDEX FORM_NORMALTXT_idx on  FORM 
(
   NORMALTXT
)
;
CREATE INDEX idx_form_txt on form(txt)
;


-- CAT definition

CREATE TABLE CAT (
    ID integer NOT NULL,
    LABEL varchar(255),
    PARENT_ID integer,
    PRIMARY KEY (ID),
    FOREIGN KEY (PARENT_ID) REFERENCES CAT (ID)
);


-- "LANGUAGE" definition

CREATE TABLE LANGUAGE (
    ID integer NOT NULL,
    NAME varchar(255) NOT NULL,
    LANG varchar(10),
    PARENT_ID integer,
    LIST_ORDER integer,
    CATEGORY integer,
    PRIMARY KEY (ID),
    FOREIGN KEY (PARENT_ID) REFERENCES LANGUAGE (ID)
);


-- "TYPE" definition

CREATE TABLE TYPE (
    ID integer NOT NULL,
    TXT varchar(50) NOT NULL,
    PARENT_ID integer,
    PRIMARY KEY (ID),
    FOREIGN KEY (PARENT_ID) REFERENCES TYPE (ID)
);


-- DOC definition

CREATE TABLE DOC (
    ID integer NOT NULL,
    TXT text NOT NULL,
    DOCTYPE_ID integer,
    PRIMARY KEY (ID),
    FOREIGN KEY (DOCTYPE_ID) REFERENCES TYPE (ID)
);
CREATE INDEX DOC_TXT_IDX ON DOC (TXT,DOCTYPE_ID);


-- RELATION definition
-- LANGUAGE_DOC, SOURCE_DOC and ENTRY_DOC
-- EIC_INFLECT,EIC_CLASS, ENTRY_SPEECH
CREATE TABLE RELATION (
   FROM_ID INTEGER NOT NULL,
   FROM_TYPE_ID INTEGER NOT NULL,
   TO_ID INTEGER NOT NULL,
   TO_TYPE_ID INTEGER NOT NULL,
   "ORDERING" INTEGER NOT NULL,
   RELATION_TYPE_ID INTEGER NOT NULL,
   CONSTRAINT RELATION_PK PRIMARY KEY (FROM_ID, FROM_TYPE_ID, TO_ID, TO_TYPE_ID, "ORDERING", RELATION_TYPE_ID),
   CONSTRAINT FK_FROM_TYPE FOREIGN KEY (FROM_TYPE_ID) REFERENCES "TYPE"(ID),
   CONSTRAINT FK_TO_TYPE FOREIGN KEY (TO_TYPE_ID) REFERENCES "TYPE"(ID),
   CONSTRAINT FK_RELATION_TYPE FOREIGN KEY (RELATION_TYPE_ID) REFERENCES "TYPE"(ID)
);
CREATE INDEX RELATION_FROM_TO_IDX ON RELATION (FROM_ID, TO_ID, "ORDERING", RELATION_TYPE_ID);


-- GLOSS definition

CREATE TABLE GLOSS (
    ID integer NOT NULL,
    LANGUAGE_ID integer NOT NULL,
    TXT varchar(255) NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID)
);
CREATE INDEX GLOSS_TXT_IDX ON GLOSS (TXT);
CREATE INDEX GLOSS_LANGUAGE_ID_IDX ON GLOSS (LANGUAGE_ID,TXT);

-- "SOURCE" definition

CREATE TABLE SOURCE (
    ID integer NOT NULL,
    NAME varchar(255),
    PREFIX varchar(255),
    SOURCETYPE_ID integer,
    PRIMARY KEY (ID),
    FOREIGN KEY (SOURCETYPE_ID) REFERENCES TYPE (ID)
);


-- ENTRY definition
CREATE TABLE ENTRY (
    ID integer NOT NULL,
    PARENT_ID integer,
    FORM_ID integer,
    LANGUAGE_ID integer,
    RLANGUAGE_ID integer,
    GLOSS_ID integer,
    NGLOSS_ID integer,
    CAT_ID integer,
    SOURCE_ID integer,
    SOURCE varchar(255),
    RULE_FORM_ID integer,
    FROM_FORM_ID integer,
    STEM_FORM_ID integer,
    ORTHO_FORM_ID integer,
    TENGWAR varchar(100),
    MARK varchar(10),
    NEOVERSION varchar(20),
    ELDAMO_PAGEID varchar(50),
    ORDERFIELD varchar(50),
    ENTRY_CLASS_ID integer,
    ENTRY_TYPE_ID integer NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT FK_ENTRY_ENTRY FOREIGN KEY (PARENT_ID) REFERENCES ENTRY (ID),
    CONSTRAINT FK_ENTRY_FORM FOREIGN KEY (FORM_ID) REFERENCES FORM (ID),
    CONSTRAINT FK_ENTRY_LANGUAGE FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID),
    CONSTRAINT FK_ENTRY_RLANGUAGE FOREIGN KEY (RLANGUAGE_ID) REFERENCES LANGUAGE (ID),
    CONSTRAINT FK_ENTRY_GLOSS FOREIGN KEY (GLOSS_ID) REFERENCES GLOSS (ID),
    CONSTRAINT FK_ENTRY_NGLOSS FOREIGN KEY (NGLOSS_ID) REFERENCES GLOSS (ID),
    CONSTRAINT FK_ENTRY_CAT FOREIGN KEY (CAT_ID) REFERENCES CAT (ID),
    CONSTRAINT FK_ENTRY_SOURCE FOREIGN KEY (SOURCE_ID) REFERENCES SOURCE (ID),
    CONSTRAINT FK_ENTRY_RULE_FORM FOREIGN KEY (RULE_FORM_ID) REFERENCES FORM (ID),
    CONSTRAINT FK_ENTRY_FROM_FORM FOREIGN KEY (FROM_FORM_ID) REFERENCES FORM (ID),
    CONSTRAINT FK_ENTRY_STEM_FORM FOREIGN KEY (STEM_FORM_ID) REFERENCES FORM (ID),
    CONSTRAINT FK_ENTRY_ORTHO_FORM FOREIGN KEY (ORTHO_FORM_ID) REFERENCES FORM (ID),
    CONSTRAINT FK_ENTRY_CLASS FOREIGN KEY (ENTRY_CLASS_ID) REFERENCES TYPE (ID),
    CONSTRAINT FK_ENTRY_TYPE FOREIGN KEY (ENTRY_TYPE_ID) REFERENCES TYPE (ID)
);